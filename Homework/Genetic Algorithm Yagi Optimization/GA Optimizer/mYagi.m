function [gain] = mYagi(p)
% This program is used with a genetic optimization code. It creates an NEC
% input file given the parameters for a 10 element YAGI antenna.  Then, it
% runs NEC and reads in the parameters(Gain, Impedance, etc) generated by
% NEC.

%=========Create NEC input file========================================
persistent numYagis;
Fname_nec='Yagi.nec';
FID_nec=fopen(Fname_nec,'wt');

% Extract values
P = p(1:10);  % Perimeter
A = p(11:20); % Aspect ratio
S = p(21:30); % Element spacing
d = p(31:40); % Diameter
numsegs = 5;  % Number of segments per wire

% Headers for NEC
fprintf(FID_nec,strcat('CM ECE 6370 Homework 9','\n'));
fprintf(FID_nec,strcat('CM Caitlyn Caggia','\n'));
fprintf(FID_nec,strcat('CM Yagi Uda Array with 10 Elements','\n'));
fprintf(FID_nec,strcat('CE File Generated by Matlab','\n'));

% Geometry input for NEC
for n = 1:10
    Pn = P(n);
    An = A(n);
    Rn = d(n)/2;
    
    % x-position
    if n == 1
        x = -S(1);
    else
        x = x + S(n-1);
    end
    
    % y-position
    y = Pn/(4+4*An);
    
    % z-position
    z = An*y;
    
    % Print to file
    fprintf(FID_nec,'GW %3i %3i %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f\n',4*(n-1)+1,numsegs,x,y,z,x,y,-z,Rn);
    fprintf(FID_nec,'GW %3i %3i %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f\n',4*(n-1)+2,numsegs,x,y,-z,x,-y,-z,Rn);
    fprintf(FID_nec,'GW %3i %3i %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f\n',4*(n-1)+3,numsegs,x,-y,z,x,y,z,Rn); 
    fprintf(FID_nec,'GW %3i %3i %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f %8.4f\n',4*(n-1)+4,numsegs,x,-y,-z,x,-y,z,Rn); 

end

% Program control commands for NEC
fprintf(FID_nec,strcat('GE','\n'));
% Excite wire 5, segment 3
fprintf(FID_nec,'EX %3i %3i %3i %3i %8.4f %8.4f\n',0,5,3,0,1,0);
% Set frequency to 2.442 GHz
fprintf(FID_nec,'FR %3i %3i %3i %3i %8.4f %8.4f\n',0,1,0,0,2442.0,0);
% Calculate gain at boresight
fprintf(FID_nec,'RP %3i %3i %3i %3i %8.4f %8.4f %8.4f %8.4f\n',0,1,1,1000,90,0,0,0);
% End of input file
fprintf(FID_nec,strcat('EN','\n'));
fclose(FID_nec);

%=======Create file to pipe to NEC ===================================

FID_input=fopen('input_CMD','wt');
fprintf(FID_input,strcat(Fname_nec,'\n'));
fprintf(FID_input,strcat('NEC.out','\n'));
fclose(FID_input);

%=======Run NEC======================================================

!NEC2Dx500 < input_CMD >tmp;

%=======Read Data form NEC output file===============================

[~,Z,gain_t,~,~,~,~] = nec_read('NEC.out');
Z0 = 50; 
rho = (Z-Z0)/(Z+Z0);
%gain = 10*log10( 10^(gain_t/10) * (1-abs(rho)^2) ); %dB
gain = -( 10^(gain_t/10) * (1-abs(rho)^2) ); % linear
if size(numYagis,1) == 0
    numYagis = 0   
end
numYagis = numYagis + 1

%=======Generate Antenna ============================================
% Graph the current Yagi along with the history of the gain. You will want
% to comment out this sesction for long runs otherwise it will slow down
% your code
% figure(1);
% subplot(1,2,1)
% plot([Sr Sr],[-Lr/2 Lr/2]);%plot reflector 
% xlabel('x/\lambda')
% ylabel('z/\lambda')
% axis equal
% hold on
% plot([0 0],[-Ls/2 Ls/2]);%plot driven 
% plot([Sd Sd],[-Ld/2 Ld/2]);%plot director 
% hold off
% axis([-.6 .6 -.4 .4])
% subplot(1,2,2)
% global Gain_old 
% Gain_old=[Gain_old gain_t];
% semilogx(Gain_old)
% axis([0 100*ceil(length(Gain_old)/100) 7 10.5])
% xlabel('iteration')
% ylabel('Gain, dB')
% drawnow
